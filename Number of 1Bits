//String Format...
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int count = 0;
        String binaryString = Integer.toBinaryString(n);

        for (int i = 0; i < binaryString.length(); i++) {
            char ch = binaryString.charAt(i);
            if (ch == '1') {
                count++;
            }
        }

        return count;
    }
}
// Using Bit wise operator....
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int count = 0;
        
        // Iterate through each bit in the binary representation of n
        while (n != 0) {
            // Increment count if the least significant bit is 1
            count += n & 1;
            
            // Shift n to the right to check the next bit
            n >>>= 1;
        }
        
        return count;
    }
}
